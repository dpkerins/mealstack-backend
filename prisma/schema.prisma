generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Plan {
  id        Int              @id @default(autoincrement())
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  calories  Int
  protein   Int
  carbs     Int
  fat       Int
  name      String
  recipes   RecipesOnPlans[]
}

model Recipe {
  id          Int              @id @default(autoincrement())
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  calories    Int
  protein     Int
  carbs       Int
  fat         Int
  ingredients String
  image_url   String
  cuisineType String?
  dairyFree   Boolean
  dishType    String?
  glutenFree  Boolean
  kosher      Boolean
  label       String
  mealType    String?
  peanutFree  Boolean
  porkFree    Boolean
  tags        String
  totalTime   Int
  url         String           @unique
  vegan       Boolean
  vegetarian  Boolean
  yield       Int
  plans       RecipesOnPlans[]
}

model RecipesOnPlans {
  planId   Int
  recipeId Int
  plan     Plan   @relation(fields: [planId], references: [id])
  recipe   Recipe @relation(fields: [recipeId], references: [id])

  @@id([planId, recipeId])
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String?
  password  String?
  githubId  String?  @unique
  image     String?
}

model session {
  sid    String   @id @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
}
